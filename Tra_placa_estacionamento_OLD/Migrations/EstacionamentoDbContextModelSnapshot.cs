// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace estacionamento.Migrations
{
    [DbContext(typeof(EstacionamentoDbContext))]
    partial class EstacionamentoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("Marca", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("Modelo", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MarcaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TamanhoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.HasIndex("TamanhoId");

                    b.ToTable("Modelo");
                });

            modelBuilder.Entity("Tamanho", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tamanho");
                });

            modelBuilder.Entity("Veiculo", b =>
                {
                    b.Property<string>("Placa")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ModeloId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Placa");

                    b.HasIndex("ModeloId");

                    b.ToTable("veiculo");
                });

            modelBuilder.Entity("Modelo", b =>
                {
                    b.HasOne("Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId");

                    b.HasOne("Tamanho", "Tamanho")
                        .WithMany()
                        .HasForeignKey("TamanhoId");

                    b.Navigation("Marca");

                    b.Navigation("Tamanho");
                });

            modelBuilder.Entity("Veiculo", b =>
                {
                    b.HasOne("Modelo", "Modelo")
                        .WithMany()
                        .HasForeignKey("ModeloId");

                    b.Navigation("Modelo");
                });
#pragma warning restore 612, 618
        }
    }
}
